<!-- src/ui/views/swap-simulator.ejs -->
<%- include('layout', { title: title, body: `
    <div class="card">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-4">
          <h2 class="card-title mb-0">Swap Simulator</h2>
          <a href="/" class="btn btn-secondary">Back to Home</a>
        </div>
        
        <div class="alert alert-info">
          <strong>Note:</strong> This simulator uses Uniswap's Quoter contract to estimate swap outcomes without executing real transactions or spending gas.
        </div>
        
        <div class="row">
          <div class="col-md-6">
            <div class="card">
              <div class="card-header">Simulate Swap</div>
              <div class="card-body">
                <form id="swapSimulatorForm">
                  <div class="mb-3">
                    <label for="tokenIn" class="form-label">From Token</label>
                    <select class="form-select" id="tokenIn" required>
                      <option value="">Select token...</option>
                      ${Object.entries(tokens).map(([symbol, token]) => `
                        <option value="${token.address}" data-decimals="${token.decimals}">${symbol}</option>
                      `).join('')}
                      <option value="custom">Custom Token</option>
                    </select>
                  </div>
                  
                  <div id="customTokenInDiv" class="mb-3" style="display: none;">
                    <label for="customTokenIn" class="form-label">Custom Token Address</label>
                    <input type="text" class="form-control" id="customTokenIn" placeholder="0x...">
                  </div>
                  
                  <div class="mb-3">
                    <label for="tokenOut" class="form-label">To Token</label>
                    <select class="form-select" id="tokenOut" required>
                      <option value="">Select token...</option>
                      ${Object.entries(tokens).map(([symbol, token]) => `
                        <option value="${token.address}" data-decimals="${token.decimals}">${symbol}</option>
                      `).join('')}
                      <option value="custom">Custom Token</option>
                    </select>
                  </div>
                  
                  <div id="customTokenOutDiv" class="mb-3" style="display: none;">
                    <label for="customTokenOut" class="form-label">Custom Token or Pool Address</label>
                    <input type="text" class="form-control" id="customTokenOut" placeholder="0x...">
                    <small class="form-text text-muted">
                      You can enter either a token address or a Uniswap V3 pool address
                    </small>
                  </div>
                  
                  <div class="mb-3">
                    <label for="fee" class="form-label">Fee Tier</label>
                    <select class="form-select" id="fee" required>
                      <option value="500">0.05%</option>
                      <option value="3000" selected>0.3%</option>
                      <option value="10000">1%</option>
                    </select>
                  </div>
                  
                  <div class="mb-3">
                    <label for="amountIn" class="form-label">Amount</label>
                    <input type="number" class="form-control" id="amountIn" step="0.000001" min="0.000001" placeholder="1.0" required>
                  </div>
                  
                  <button type="submit" class="btn btn-primary">Get Quote</button>
                </form>
              </div>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="card">
              <div class="card-header">Quote Result</div>
              <div class="card-body">
                <div id="quoteResult" style="display: none;">
                  <div class="alert alert-success mb-3">
                    <div class="d-flex justify-content-between">
                      <div>
                        <strong>Input:</strong> <span id="quoteAmountIn"></span>
                      </div>
                      <div>
                        <strong>Output:</strong> <span id="quoteAmountOut"></span>
                      </div>
                    </div>
                    
                    <!-- USD Values -->
                    <div id="usdValues" class="d-flex justify-content-between mt-1" style="display: none;">
                      <div>
                        <span class="text-muted">≈ <span id="quoteAmountInUsd"></span></span>
                      </div>
                      <div>
                        <span class="text-muted">≈ <span id="quoteAmountOutUsd"></span></span>
                      </div>
                    </div>
                    
                    <div class="mt-3">
                      <strong>Exchange Rate:</strong> <span id="quoteRate"></span>
                    </div>
                    
                    <!-- USD Breakdown -->
                    <div id="usdBreakdown" class="mt-3 p-2 bg-light rounded" style="display: none;">
                      <h6 class="mb-2">USD Value Breakdown</h6>
                      <div class="row">
                        <div class="col-6">
                          <div class="mb-1">
                            <small><strong>Input Token Price:</strong></small><br>
                            <small>1 <span id="inputTokenSymbol"></span> = <span id="inputTokenUsdPrice"></span></small>
                          </div>
                        </div>
                        <div class="col-6">
                          <div class="mb-1">
                            <small><strong>Output Token Price:</strong></small><br>
                            <small>1 <span id="outputTokenSymbol"></span> = <span id="outputTokenUsdPrice"></span></small>
                          </div>
                        </div>
                      </div>
                      <div class="mt-1">
                        <small><strong>Effective USD Exchange Rate:</strong></small><br>
                        <small>$1.00 in <span id="inputTokenSymbol2"></span> = $<span id="effectiveUsdRate"></span> in <span id="outputTokenSymbol2"></span></small>
                      </div>
                    </div>
                  </div>
                  
                  <div class="alert alert-info">
                    <p class="mb-0">This is a simulated quote only. No actual swap will be performed.</p>
                  </div>
                </div>
                
                <div id="quoteLoading" style="display: none;">
                  <div class="d-flex justify-content-center">
                    <div class="spinner-border text-primary" role="status">
                      <span class="visually-hidden">Loading...</span>
                    </div>
                  </div>
                  <p class="text-center mt-2">Getting quote...</p>
                </div>
                
                <div id="quoteError" class="alert alert-danger" style="display: none;">
                  <div id="errorMessage"></div>
                  <div id="errorHelp" class="mt-2" style="display: none;">
                    <strong>Suggestions:</strong>
                    <ul class="mb-0 mt-1">
                      <li>Try a different fee tier (0.05%, 0.3%, or 1%)</li>
                      <li>Check if the token addresses are correct</li>
                      <li>The pool might have low liquidity</li>
                    </ul>
                  </div>
                </div>
                
                <div id="initialMessage">
                  <p class="text-center text-muted">Fill out the form to get a swap quote</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div id="tokenData" data-tokens='${JSON.stringify(Object.entries(tokens).reduce((acc, [symbol, token]) => {
      acc[token.address.toLowerCase()] = symbol;
      return acc;
    }, {}))}'></div>
    <script src="/js/swap-simulator.js"></script>
    ` }) %>
